name: Product prices monitoring DEPLOY

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main
      - feature/refactor-lambdas

jobs:
  build:
    name: Build application
    runs-on: ubuntu-latest
    steps:
      - name: "☁️ checkout repository"
        uses: actions/checkout@v4

      - name: "🔧 install python 3.11"
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: "📦 install dependencies"
        run: |
          echo "Installing dependencies for parent lambda"
          (cd source/backend/product_prices_collector/parent && python3 -m pip install -r requirements.txt)
          echo "Installing dependencies for child lambda"
          (cd source/backend/product_prices_collector/child && python3 -m pip install -r requirements.txt)

      - name: "🔍 run code quality check"
        run: |
          echo "Running code quality tools..."
          (cd source/backend/product_prices_collector && pylint parent child)

      - name: "🔍 run tests"
        run: |
          echo "Running tests against parent lambda"
          (cd source/backend/product_prices_collector/parent && python3 -m unittest)
          echo "Running tests against child lambda"
          (cd source/backend/product_prices_collector/child && python3 -m unittest)

      - name: "🔍 build docker images"
        run: |          
          echo "Building parent lambda..."
          (cd source/backend/product_prices_collector/parent && \
          ../../../../misc/build_lambda_image.sh)
          
          echo "Building child lambda..."
          (cd source/backend/product_prices_collector/child && \
          ../../../../misc/build_lambda_image.sh)

      - name: "💾 save product prices collector parent lambda docker images"
        uses: actions/cache@v3
        with:
          key: product-prices-collector-parent-artifact-${{ github.run_number }}
          path: ./source/backend/product_prices_collector/parent/target

      - name: "💾 save product prices collector child lambda docker images"
        uses: actions/cache@v3
        with:
          key: product-prices-collector-parent-artifact-${{ github.run_number }}
          path: ./source/backend/product_prices_collector/child/target

  deploy-dev:
    name: Deploy application to DEV
    if: ${{ github.event_name == 'workflow_dispatch' }}
    environment: dev
    needs: build
    runs-on: ubuntu-latest
    env:
      AWS_ACCOUNT: ${{ secrets.AWS_ACCOUNT }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      ENVIRONMENT: dev
    steps:
      - name: "☁️ checkout repository"
        uses: actions/checkout@v4

      - name: "💾 fetch lambdas docker images"
        uses: actions/cache@v3
        with:
          key: product-prices-collector-parent-artifact-${{ github.run_number }}
          path: ./source/backend/product_prices_collector/parent/target
          fail-on-cache-miss: true

      - name: "💾 fetch lambdas docker images"
        uses: actions/cache@v3
        with:
          key: product-prices-collector-parent-artifact-${{ github.run_number }}
          path: ./source/backend/product_prices_collector/child/target
          fail-on-cache-miss: true

      - name: "🔍 push docker images"
        run: |
          region=$(awk -F '"' '{print $2;exit}' < infrastructure/environments/${{ env.ENVIRONMENT }}/env_vars.yaml)
          echo "Region=${region}"
          
          echo "Pushing parent lambda..."
          (cd source/lambda_product_prices_collector_parent && \
          ../../misc/build_push_lambda_image.sh ${{ env.AWS_ACCOUNT }} $region)
          
          echo "Pushing child lambda..."
          (cd source/lambda_product_prices_collector_child && \
          ../../misc/build_push_lambda_image.sh ${{ env.AWS_ACCOUNT }} $region)

#      - name: "🔧 install terraform 1.3.8"
#        uses: hashicorp/setup-terraform@v2
#        with:
#          terraform_version: 1.3.8
#
#      - name: "🔧 install terragrunt 0.43.2"
#        run: |
#          curl -LJO https://github.com/gruntwork-io/terragrunt/releases/download/v0.43.2/terragrunt_linux_amd64
#          mv terragrunt_linux_amd64 terragrunt
#          chmod +x terragrunt
#          sudo mv terragrunt /usr/local/bin
#          ls -l /usr/local/bin
#          terragrunt --version
#
#      - name: "🔍 prepare environment vars"
#        run: |
#          region=$(awk -F '"' '{print $2;exit}' < infrastructure/environments/${{ env.ENVIRONMENT }}/env_vars.yaml)
#          echo "Region=${region}"
#
#          echo "Prepare parent image tag"
#          parent_lambda_name_and_version=$(awk -F '=' '{print $1;exit}' < source/lambda_product_prices_collector_parent/lambda_spec.txt)
#          parent_image_uri="${{ env.AWS_ACCOUNT }}.dkr.ecr.${region}.amazonaws.com/${parent_lambda_name_and_version}"
#          parent_image_uri_esc=$(sed 's/[\/\.]/\\&/g' <<<"$parent_image_uri")
#          echo "parent_image_uri_esc=${parent_image_uri_esc}"
#          sed -i -e 's/lambda_product_prices_collector_parent_image_uri: "[^"]*"/lambda_product_prices_collector_parent_image_uri: "'"$parent_image_uri_esc"'"/g' infrastructure/environments/${{ env.ENVIRONMENT }}/env_vars.yaml
#          cat infrastructure/environments/${{ env.ENVIRONMENT }}/env_vars.yaml
#
#          echo "Prepare child image tag"
#          child_lambda_name_and_version=$(awk -F '=' '{print $1;exit}' < source/lambda_product_prices_collector_child/lambda_spec.txt)
#          child_image_uri="${{ env.AWS_ACCOUNT }}.dkr.ecr.${region}.amazonaws.com/${child_lambda_name_and_version}"
#          child_image_uri_esc=$(sed 's/[\/\.]/\\&/g' <<<"$child_image_uri")
#          echo "child_image_uri_esc=${child_image_uri_esc}"
#          sed -i -e 's/lambda_product_prices_collector_child_image_uri: "[^"]*"/lambda_product_prices_collector_child_image_uri: "'"$child_image_uri_esc"'"/g' infrastructure/environments/${{ env.ENVIRONMENT }}/env_vars.yaml
#          cat infrastructure/environments/${{ env.ENVIRONMENT }}/env_vars.yaml
#
#      - name: "🔍 run terragrunt init and terragrunt apply"
#        run: |
#          (cd infrastructure/environments/${{ env.ENVIRONMENT }} && \
#          terragrunt init --terragrunt-non-interactive && \
#          terragrunt apply -auto-approve)

#  post-deploy:
#    name: Post deploy actions
#    needs: [build, deploy-dev]
#    runs-on: ubuntu-latest
#    steps:
#      - name: "☁️ checkout repository"
#        uses: actions/checkout@v4
#
#      - name: "☁️ increment lambdas versions"
#        run: |
#          echo "Update parent lambda version"
#          sed -ri 's/(.*)([0-9]+\.[0-9]+\.)([0-9]+)(-snapshot=)(.*)/echo "\1\2$((\3+1))\4\5"/ge' source/lambda_product_prices_collector_parent/lambda_spec.txt
#
#          echo "Update child lambda version"
#          sed -ri 's/(.*)([0-9]+\.[0-9]+\.)([0-9]+)(-snapshot=)(.*)/echo "\1\2$((\3+1))\4\5"/ge' source/lambda_product_prices_collector_child/lambda_spec.txt
#
#          echo "Committing updated versions"
#          git config user.name github-actions
#          git config user.email github-actions@github.com
#          git add .
#          git status
#          git commit -m "Update parent and child lambdas versions"
#          git push
