name: Product prices monitoring DEPLOY

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main

jobs:
  build:
    name: Build application
    runs-on: ubuntu-latest
    steps:
      - name: "‚òÅÔ∏è checkout repository"
        uses: actions/checkout@v3

      - name: "üîß install python 3.11"
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: "üì¶ install dependencies"
        run: |
          echo "Installing dependencies for parent lambda"
          (cd source/lambda_product_prices_collector_parent && python3 -m pip install -r requirements.txt)
          echo "Installing dependencies for child lambda"
          (cd source/lambda_product_prices_collector_child && python3 -m pip install -r requirements.txt)

      - name: "üîç run code quality check"
        run: |
          echo "Running code quality tools..."
          (cd source && pylint lambda_product_prices_collector_parent lambda_product_prices_collector_child)

      - name: "üîç run tests"
        run: |
          echo "Running tests against parent lambda"
          (cd source/lambda_product_prices_collector_parent && python3 -m unittest)
          echo "Running tests against child lambda"
          (cd source/lambda_product_prices_collector_child && python3 -m unittest)

  deploy-dev:
    name: Deploy application to DEV
    if: ${{ github.event_name == 'workflow_dispatch' }}
    environment: dev
    needs: build
    runs-on: ubuntu-latest
    env:
      AWS_ACCOUNT: ${{ secrets.AWS_ACCOUNT }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      ENVIRONMENT: dev
    steps:
      - name: "‚òÅÔ∏è checkout repository"
        uses: actions/checkout@v3

      - name: "üîç build & push docker images"
        run: |
          region=$(awk -F '"' '{print $2;exit}' < infrastructure/environments/${{ env.ENVIRONMENT }}/env_vars.yaml)
          echo "Region=${region}"
          
          echo "Building parent lambda..."
          (cd source/lambda_product_prices_collector_parent && ../../misc/build_push_lambda_image.sh ${{ env.AWS_ACCOUNT }} $region)
          
          echo "Building child lambda..."
          (cd source/lambda_product_prices_collector_child && ../../misc/build_push_lambda_image.sh ${{ env.AWS_ACCOUNT }} $region)

#      - name: "üîß install terraform 1.3.8"
#        uses: hashicorp/setup-terraform@v2
#        with:
#          terraform_version: 1.3.8
#
#      - name: "üîß install terragrunt 0.43.2"
#        run: |
#          curl -LJO https://github.com/gruntwork-io/terragrunt/releases/download/v0.43.2/terragrunt_linux_amd64
#          mv terragrunt_linux_amd64 terragrunt
#          chmod +x terragrunt
#          sudo mv terragrunt /usr/local/bin
#          ls -l /usr/local/bin
#          terragrunt --version
#
#      - name: "üîç run terragrunt init and terragrunt apply"
#        run: cd infrastructure/environments/${{ env.ENVIRONMENT }} && terragrunt init --terragrunt-non-interactive && terragrunt apply -auto-approve
